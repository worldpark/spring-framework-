<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="trade">

	<!-- 거래요청시 거래테이블에 데이터삽입  -->
	<insert id="rqtrade">
		insert into trade(sellerid, buyerid, sellernickname, buyernickname, status, tradepoint, tradedate, tradegoods, bid)
		values(#{sellerid}, #{buyerid}, #{sellernickname}, #{buyernickname}, '거래요청', #{tradepoint}, now(), #{tradegoods}, #{bid})
	</insert>
	
	<!-- 거래요청시 구매자의 포인트를 차감하고 임시구매포인트로 전환 -->
	<update id = "payment">
		update member
		set point = point - #{tradepoint}, buypenpoint = buypenpoint + #{tradepoint}
		where id = #{buyerid}
	</update>
	
	<!-- 구매자가 한 게시물에서 거래요청하거나 거래중인지 파악 -->
	<select id="rqcount" resultType="Integer">
		select count(*)
		from trade
		where bid = #{bid} and buyerid = #{buyerid} and status != '거래완료'
	</select>
	
	<!-- 거래테이블에서 데이터 삭제 -->
	<delete id="cancletrade">
		delete from trade
		where tid = #{tid}
	</delete>
	
	<!-- 거래취소시 구매자에게 포인트 환불 -->
	<update id = "refund">
		update member
		set point = point + #{tradepoint}, buypenpoint = buypenpoint - #{tradepoint}
		where id = #{buyerid}
	</update>
	
	<!-- 거래요청수락 -->
	<update id = "approve">
		update trade
		set status = '거래중'
		where tid = #{tid}
	</update>
	
	<!-- 거래중 ui구성 데이터 -->
	<select id="read" resultType="spring.mvc.trade.dto.TradeDto">
		select *
		from trade
		where tid = #{tid}
	</select>
	
	<!-- 거래테이블에 거래상태 갱신 -->
	<update id = "fintrade">
		update trade
		set status = '거래완료'
		where tid = #{tid}
	</update>
	
	<!-- 구매자의 임시구매포인트 갱신 -->
	<update id="finproc1">
		update member
		set buypenpoint = buypenpoint - #{tradepoint}
		where id = #{buyerid}
	</update>
	
	<!-- 판매자의 포인트 증가 -->
	<update id="finproc2">
		update member
		set point = point + #{tradepoint}
		where id = #{sellerid}
	</update>
	
	<!-- 페이징 거래완료 -->
	<select id="pagingaft" resultType="spring.mvc.trade.dto.TradeDto">
		select *
		from trade
		where sellerid = #{selectstring} and status = '거래완료' or buyerid = #{selectstring} and status = '거래완료'
		order by tid desc
		limit #{pagination.startList}, #{pagination.listSize}
	</select>
	
	<!-- 전체 페이지 수 거래완료 -->
	<select id="getBoardListCntaft" resultType="Integer">
		select count(*) as listCnt
		from trade
		where sellerid = #{id} and status = '거래완료' or buyerid = #{id} and status = '거래완료'
	</select>	
	
	<!-- 페이징 거래중 -->
	<select id="paginging" resultType="spring.mvc.trade.dto.TradeDto">
		select *
		from trade
		where sellerid = #{selectstring} and status = '거래중' or buyerid = #{selectstring} and status = '거래중'
		order by tid desc
		limit #{pagination.startList}, #{pagination.listSize}
	</select>
	
	<!-- 전체 페이지 수 거래중 -->
	<select id="getBoardListCnting" resultType="Integer">
		select count(*) as listCnt
		from trade
		where sellerid = #{id} and status = '거래중' or buyerid = #{id} and status = '거래중'
	</select>	
	
	<!-- 페이징 거래요청 -->
	<select id="pagingbefore" resultType="spring.mvc.trade.dto.TradeDto">
		select *
		from trade
		where sellerid = #{selectstring} and status = '거래요청'
		order by tid desc
		limit #{pagination.startList}, #{pagination.listSize}
	</select>
	
	<!-- 전체 페이지 수 거래요청 -->
	<select id="getBoardListCntbefore" resultType="Integer">
		select count(*) as listCnt
		from trade
		where sellerid = #{id} and status = '거래요청'
	</select>
</mapper>